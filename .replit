modules = ["python-3.11", "nodejs-20", "python3"]

# This builds the frontend and starts the Python backend
run = "bash -c 'cd frontend && npm install && npm run build && cd .. && python main.py'"

hidden = ["node_modules", ".pythonlibs"]

[nix]
channel = "stable-24_05"

[deployment]
run = ["python", "main.py"]

[[ports]]
localPort = 3000
externalPort = 3000

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5173
externalPort = 5173

[[ports]]
localPort = 8080
externalPort = 8080

[env]
PYTHONPATH = "."
DATABASE_URL = "postgresql://neondb_owner:npg_UuYP8ajchEx1@ep-polished-smoke-a465m3uc.us-east-1.aws.neon.tech/neondb?sslmode=require"

[languages.python]
pattern = "**/*.py"
syntax = "python"

[languages.typescript]
pattern = "**/*.{ts,tsx}"
syntax = "typescript"

[languages.javascript]
pattern = "**/*.{js,jsx}"
syntax = "javascript"

[workflows]

[[workflows.workflow]]
name = "parallel tasks"
mode = "parallel"
author = 39844550

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "API tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "integration tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "semantic API tests"

[[workflows.workflow]]
name = "database setup"
mode = "sequential"
author = 39844550

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -c \"      import asyncio      from server.database import init_db, cleanup_pool            async def setup_db():          await init_db()          await cleanup_pool()            asyncio.run(setup_db())      \""

[[workflows.workflow]]
name = "API tests"
mode = "parallel"
author = 39844550

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pytest tests/test_api.py -v"

[[workflows.workflow]]
name = "integration tests"
mode = "parallel"
author = 39844550

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pytest tests/test_integration.py -v"

[[workflows.workflow]]
name = "semantic API tests"
mode = "parallel"
author = 39844550

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pytest tests/test_semantic_api.py -v"

[[workflows.workflow]]
name = "test suite runner"
mode = "sequential"
author = 39844550

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "database setup"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "parallel tasks"
